/*
 * Copyright (c) 2022. AppDynamics LLC and its affiliates.
 * All rights reserved.
 *
 */

// TODO: split iOS and Android tests to separate files.
// WARNING: Possible Gradle duplicate task error if creating shared Gradle file.

// Configure these based on the system's emulator/simulator names.
def android_device = "Android SDK built for x86"
def iOS_device = "iPhone 14"

def test_driver_path = "integration_test/test_driver/integration_test.dart"
def integration_tests_path = "integration_test/features/"
def wiremock_path = "integration_test/wiremock/wiremock-jre8-standalone-2.29.0.jar"

task startIntegrationTestServer() {
    description 'Open a mock server in background that will be used in the integration tests.'
    ant.exec(
            executable: 'java',
            spawn: true
    ) {
        arg(value: "-jar")
        arg(value: wiremock_path)
        arg(value: "--port")
        arg(value: '9999')
    }
    doLast {
        println("Wiremock server started.")
    }
}

// iOS tests

task runStartIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "start_test.dart", "-d", iOS_device
}

task runRequestTrackerIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "request_tracker_test.dart", "-d", iOS_device
}

task runCustomTimersIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "custom_timers_test.dart", "-d", iOS_device
}

task runBreadcrumbsIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "breadcrumbs_test.dart", "-d", iOS_device
}

task runErrorReportingIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "error_reporting_test.dart", "-d", iOS_device
}

task runSessionFramesIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "session_frames_test.dart", "-d", iOS_device
}

task runScreenshotsIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "screenshots_test.dart", "-d", iOS_device
}

task runCustomMetricsIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "custom_metrics_test.dart", "-d", iOS_device
}

task runAgentShutdownIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "agent_shutdown_test.dart", "-d", iOS_device
}

task runInfoPointsIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "info_points_test.dart", "-d", iOS_device
}

task runSessionControlIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "session_control_test.dart", "-d", iOS_device
}

task runChangeAppKeyIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "change_app_key_test.dart", "-d", iOS_device
}

task runANRIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "anr_test.dart", "-d", iOS_device
}

task runActivityTrackingIntegrationTestiOS(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "activity_tracking_test.dart", "-d", iOS_device
}

// Android tests

task runStartIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "start_test.dart", "-d", android_device
}

task runRequestTrackerIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "request_tracker_test.dart", "-d", android_device
}

task runCustomTimersIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "custom_timers_test.dart", "-d", android_device
}

task runBreadcrumbsIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "breadcrumbs_test.dart", "-d", android_device
}

task runErrorReportingIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "error_reporting_test.dart", "-d", android_device
}

task runSessionFramesIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "session_frames_test.dart", "-d", android_device
}

task runScreenshotsIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "screenshots_test.dart", "-d", android_device
}

task runCustomMetricsIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "custom_metrics_test.dart", "-d", android_device
}

task runAgentShutdownIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "agent_shutdown_test.dart", "-d", android_device
}

task runSessionControlIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "session_control_test.dart", "-d", android_device
}

task runInfoPointsIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "info_points_test.dart", "-d", android_device
}

task runChangeAppKeyIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "change_app_key_test.dart", "-d", android_device
}

task runANRIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "anr_test.dart", "-d", android_device
}

task runActivityTrackingIntegrationTestAndroid(type: Exec) {
    dependsOn startIntegrationTestServer
    commandLine "flutter", "drive", "--driver", test_driver_path, "--target",
            integration_tests_path + "activity_tracking_test.dart", "-d", android_device
}
