/*
 * Copyright (c) 2022. AppDynamics LLC and its affiliates.
 * All rights reserved.
 *
 */

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.0.2/samples
 */

apply from: "integration_test/tests.gradle"

task buildiOS(type: Exec) {
    commandLine "../tool/flutter-build-ios.sh"
}

task buildAndroid(type: Exec) {
    commandLine "../tool/flutter-build-android.sh"
}

task startiOSSimulator(type: Exec) {
    commandLine "../tool/start-ios-simulator.sh"
}

task startAndroidEmulator(type: Exec) {
    commandLine "../tool/start-android-emulator.sh"
}

task upgradeFlutter(type: Exec) {
    commandLine "../tool/flutter-upgrade.sh"
}

task createDummyReport(type: Exec) {
    commandLine "../tool/create-dummy-report.sh"
}

task runIntegrationTestsiOS {
    dependsOn ordered(
            "upgradeFlutter",
            "startiOSSimulator",
            "runStartIntegrationTestiOS",
            "runANRIntegrationTestiOS",
            "runRequestTrackerIntegrationTestiOS",
            "runCustomTimersIntegrationTestiOS",
            "runBreadcrumbsIntegrationTestiOS",
            "runErrorReportingIntegrationTestiOS",
            "runSessionFramesIntegrationTestiOS",
            "runScreenshotsIntegrationTestiOS",
            "runCustomMetricsIntegrationTestiOS",
            "runAgentShutdownIntegrationTestiOS",
            "runSessionControlIntegrationTestiOS",
            "runInfoPointsIntegrationTestiOS",
            "runChangeAppKeyIntegrationTestiOS",
            "runActivityTrackingIntegrationTestiOS",
            "createDummyReport"
    )
}

task runIntegrationTestsAndroid {
// TODO: Fix "Failed to rasterize a picture: unable to create render target at specified size."
// on CI/CD.
    dependsOn ordered(
//            "upgradeFlutter",
//            "startAndroidEmulator",
//            "runStartIntegrationTestAndroid",
//            "runANRIntegrationTestAndroid",
//            "runRequestTrackerIntegrationTestAndroid",
//            "runCustomTimersIntegrationTestAndroid",
//            "runBreadcrumbsIntegrationTestAndroid",
//            "runErrorReportingIntegrationTestAndroid",
//            "runSessionFramesIntegrationTestAndroid",
//            "runScreenshotsIntegrationTestAndroid",
//            "runCustomMetricsIntegrationTestAndroid",
//            "runAgentShutdownIntegrationTestAndroid",
//            "runSessionControlIntegrationTestAndroid",
//            "runInfoPointsIntegrationTestAndroid",
//            "runChangeAppKeyIntegrationTestAndroid",
//            "runActivityTrackingIntegrationTestAndroid",
            "createDummyReport"
    )
}

// Imply an order of tasks and still type check
def ordered(String... dependencyPaths) {
    def dependencies = dependencyPaths.collect { tasks.getByPath(it) }
    for (int i = 0; i < dependencies.size() - 1; i++) {
        dependencies[i + 1].mustRunAfter(dependencies[i])
    }
    return dependencies
}
