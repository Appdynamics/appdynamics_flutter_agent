/*
 * Copyright (c) 2021. AppDynamics LLC and its affiliates.
 * All rights reserved.
 *
 */

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.0.2/samples
 */

apply from: "integration_test/tests.gradle"

task buildiOS(type: Exec) {
    commandLine "../scripts/flutter-build-ios.sh"
}

task buildAndroid(type: Exec) {
    commandLine "../scripts/flutter-build-android.sh"
}

task startiOSSimulator(type: Exec) {
    commandLine "../scripts/start-ios-simulator.sh"
}

task startAndroidEmulator(type: Exec) {
    commandLine "../scripts/start-android-emulator.sh"
}

task runIntegrationTestsiOS {
    dependsOn ordered(
            "startiOSSimulator",
            "runStartIntegrationTestiOS",
            "runRequestTrackerIntegrationTestiOS",
            "runTrackedHttpClientIntegrationTestiOS",
            "runCustomTimersIntegrationTestiOS",
            "runBreadcrumbsIntegrationTestiOS",
            "runErrorReportingIntegrationTestiOS",
            "runSessionFramesIntegrationTestiOS",
            "runScreenshotsIntegrationTestiOS",
            "runCustomMetricsIntegrationTestiOS",
            "runAgentShutdownIntegrationTestiOS",
            "runSessionControlIntegrationTestiOS",
            "runInfoPointsIntegrationTestiOS",
            "runChangeAppKeyIntegrationTestiOS",
            "runANRIntegrationTestiOS",
            "runActivityTrackingIntegrationTestiOS"
    )
}

task runIntegrationTestsAndroid {
    dependsOn ordered(
            "startAndroidEmulator",
            "runStartIntegrationTestAndroid",
            "runRequestTrackerIntegrationTestAndroid",
            "runTrackedHttpClientIntegrationTestAndroid",
            "runCustomTimersIntegrationTestAndroid",
            "runBreadcrumbsIntegrationTestAndroid",
            "runErrorReportingIntegrationTestAndroid",
            "runSessionFramesIntegrationTestAndroid",
            "runScreenshotsIntegrationTestAndroid",
            "runCustomMetricsIntegrationTestAndroid",
            "runAgentShutdownIntegrationTestAndroid",
            "runSessionControlIntegrationTestAndroid",
            "runInfoPointsIntegrationTestAndroid",
            "runChangeAppKeyIntegrationTestAndroid",
            "runANRIntegrationTestAndroid",
            "runActivityTrackingIntegrationTestAndroid"
    )
}

// Imply an order of tasks and still type check
def ordered(String... dependencyPaths) {
    def dependencies = dependencyPaths.collect { tasks.getByPath(it) }
    for (int i = 0; i < dependencies.size() - 1; i++) {
        dependencies[i + 1].mustRunAfter(dependencies[i])
    }
    return dependencies
}
